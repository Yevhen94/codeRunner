{"version":3,"sources":["elements/button/Button.jsx","components/commentform/CommentForm.jsx","elements/comment/Comment.jsx","components/pagination/Pagination.jsx","components/commentslist/CommentsList.jsx","components/commentpage/CommentPage.jsx","App.js","index.js"],"names":["Button","props","type","disabled","className","onClick","onSubmit","content","CommentForm","submitted","useState","message","setMessage","values","a","setSubmitting","setErrors","setStatus","resetForm","headers","Headers","axios","post","baseURL","then","response","status","setTimeout","initialValues","name","text","validate","errors","validateForm","touched","handleChange","handleBlur","handleSubmit","isSubmitting","onChange","onBlur","value","placeholder","Comment","data","update","src","alt","xlinkHref","Pagination","links","comments","currentPage","lastPage","countLinks","i","length","push","url","window","scrollTo","map","btnItem","index","label","CommentsList","newComment","newCommentUpdated","URL","setURL","setLastPage","setCurrentPage","items","setItems","setLinks","loading","setLoading","total","setTotal","lastPageURL","setLastPageURL","getComments","fetch","json","useEffect","item","moment","fromNow","id","CommentPage","setNewComment","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e404a98f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.scss\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <>\r\n      <button\r\n        type={props.type ? props.type : \"button\"}\r\n        disabled={props.disabled ? props.disabled : null}\r\n        className={props.className}\r\n        onClick={props.onClick}\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        {props.content ? <span>{props.content}</span> : null}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport \"./commentform.scss\";\r\nimport Button from \"../../elements/button/Button\";\r\n\r\nconst CommentForm = ({ submitted }) => {\r\n  const formValues = {\r\n    name: \"\",\r\n    text: \"\",\r\n  };\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const validateForm = (values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = \"Це поле є обов'язковим\";\r\n    } else if (!values.text) {\r\n      errors.text = \"Це поле є обов'язковим\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const onSubmit = async (\r\n    values,\r\n    { setSubmitting, setErrors, setStatus, resetForm }\r\n  ) => {\r\n    const headers = new Headers();\r\n\r\n    await axios.post(baseURL, values, headers).then((response) => {\r\n      if (response.status === 200) {\r\n        submitted();\r\n        setMessage(\"Comment created succesfull\");\r\n        resetForm();\r\n        setTimeout(() => {\r\n          setMessage(\"\");\r\n        }, 10000);\r\n      }\r\n    });\r\n  };\r\n\r\n  const baseURL = \"https://jordan.ashton.fashion/api/goods/30/comments\";\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={formValues}\r\n        validate={(values) => validateForm(values)}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <p className=\"form__success\">{message}</p>\r\n            <label>\r\n              <span className=\"form__fieldname\">Name</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.name}\r\n                className=\"form__input-name\"\r\n                placeholder=\"Enter your name here\"\r\n              />\r\n            </label>\r\n            <p className=\"form__error\">\r\n              {errors.name && touched.name && errors.name}\r\n            </p>\r\n            <label>\r\n              <span className=\"form__fieldname\">Comments</span>\r\n              <textarea\r\n                name=\"text\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.text}\r\n                className=\"form__input-text\"\r\n                placeholder=\"Write a review\"\r\n              ></textarea>\r\n            </label>\r\n            <p className=\"form__error\">\r\n              {errors.text && touched.text && errors.text}\r\n            </p>\r\n            <div className=\"form__button\">\r\n              <Button\r\n                type={\"submit\"}\r\n                disabled={isSubmitting}\r\n                className=\"button\"\r\n                content={\"POST\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React from \"react\";\r\nimport \"./comment.scss\";\r\n\r\nconst Comment = ({ data, update }) => {\r\n  return (\r\n    <>\r\n      <div className=\"comment-item\">\r\n        <div className=\"comment-item__photo\">\r\n          <img\r\n            src=\"https://via.placeholder.com/50\"\r\n            alt=\"placeholder\"\r\n            className=\"image\"\r\n          />\r\n        </div>\r\n        <div className=\"comment-item__like\">\r\n          <svg className=\"icon icon-heart\">\r\n            <use xlinkHref=\"#icon-heart\"></use>\r\n          </svg>\r\n        </div>\r\n        <div className=\"comment-item__content\">\r\n          <div className=\"comment-item__content__wrapper\">\r\n            <h6 className=\"comment-item__username\">{data.name}</h6>\r\n            <p className=\"comment-item__date\">({update})</p>\r\n          </div>\r\n          <p className=\"comment-item__text\">{data.text}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./pagination.scss\";\r\n\r\nconst Pagination = ({ links, comments, currentPage, lastPage }) => {\r\n  let countLinks = [];\r\n  for (let i = 1; i < links.length - 1; i++) {\r\n    countLinks.push(links[i]);\r\n  }\r\n\r\n  // const [disabled, setDisabled] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"pagination\">\r\n        <ul className=\"pagination__list\">\r\n          <li\r\n            className={\r\n              currentPage !== 1\r\n                ? \"pagination__item pagination__item--arrow\"\r\n                : \"pagination__item pagination__item--arrow disabled-arrow\"\r\n            }\r\n            onClick={\r\n              currentPage !== 1\r\n                ? () => {\r\n                    comments(links[0].url);\r\n                    window.scrollTo(0, 0);\r\n                  }\r\n                : null\r\n            }\r\n          >\r\n            &laquo;\r\n          </li>\r\n          {countLinks.map((btnItem, index) => (\r\n            <li\r\n              className={\r\n                currentPage === btnItem.label\r\n                  ? \"pagination__item active\"\r\n                  : \"pagination__item\"\r\n              }\r\n              key={index}\r\n              onClick={() => {\r\n                comments(btnItem.url);\r\n                window.scrollTo(0, 0);\r\n              }}\r\n            >\r\n              {btnItem.label}\r\n            </li>\r\n          ))}\r\n          <li\r\n            className={\r\n              currentPage !== lastPage\r\n                ? \"pagination__item pagination__item--arrow\"\r\n                : \"pagination__item pagination__item--arrow disabled-arrow\"\r\n            }\r\n            onClick={\r\n              currentPage !== lastPage\r\n                ? () => {\r\n                    comments(links[links.length - 1].url);\r\n                    window.scrollTo(0, 0);\r\n                  }\r\n                : null\r\n            }\r\n          >\r\n            &raquo;\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./commentslist.scss\";\r\nimport Comment from \"../../elements/comment/Comment\";\r\nimport Pagination from \"../pagination/Pagination\";\r\nimport moment from \"moment\";\r\nimport Button from \"../../elements/button/Button\";\r\n\r\nconst CommentsList = ({ newComment, newCommentUpdated }) => {\r\n  const [URL, setURL] = useState(\r\n    \"https://jordan.ashton.fashion/api/goods/30/comments?page=1\"\r\n  );\r\n  const [lastPage, setLastPage] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [items, setItems] = useState([]);\r\n  const [links, setLinks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const [lastPageURL, setLastPageURL] = useState(\"\");\r\n  const getComments = (values) => {\r\n    setLoading(true);\r\n    fetch(values)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        newCommentUpdated();\r\n        setItems(response.data);\r\n        setURL(response[\"next_page_url\"]);\r\n        setLastPage(response[\"last_page\"]);\r\n        setCurrentPage(response[\"current_page\"]);\r\n        setLinks(response.links);\r\n        setTotal(response.total);\r\n        setLastPageURL(response[\"last_page_url\"]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (newComment) {\r\n      getComments(lastPageURL);\r\n    }\r\n  }, [newComment]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      getComments(URL);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"comments\">\r\n        <div className=\"comments__data\">\r\n          <div className=\"comments__data__count\">{total} Responses</div>\r\n          <div className=\"comments__data__sort\">\r\n            <span className=\"data-text\">Newest</span>\r\n            <span className=\"data-text\">Most Liked</span>\r\n            <span className=\"data-text\">Oldest</span>\r\n          </div>\r\n        </div>\r\n        {items.map((item) => {\r\n          return (\r\n            <Comment\r\n              data={item}\r\n              key={item.id}\r\n              update={moment(item[\"updated_at\"]).fromNow()}\r\n            />\r\n          );\r\n        })}\r\n        <div className=\"comments__button\">\r\n          <Button\r\n            className={\r\n              currentPage !== lastPage ? \"button\" : \"button button--disabled\"\r\n            }\r\n            content={\"See more\"}\r\n            onClick={() => getComments(URL)}\r\n          />\r\n        </div>\r\n        <Pagination\r\n          comments={getComments}\r\n          links={links}\r\n          currentPage={currentPage}\r\n          lastPage={lastPage}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import React, { useState } from \"react\";\r\nimport \"./commentpage.scss\";\r\nimport CommentForm from \"../commentform/CommentForm\";\r\nimport CommentsList from \"../commentslist/CommentsList\";\r\n\r\nconst CommentPage = () => {\r\n  const [newComment, setNewComment] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <main className=\"main\">\r\n        <div className=\"main__wrapper\">\r\n          <div className=\"main__form\">\r\n            <CommentForm\r\n              submitted={() => {\r\n                setNewComment(true);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"main__comments\">\r\n            <CommentsList\r\n              newComment={newComment}\r\n              newCommentUpdated={() => {\r\n                setNewComment(false);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentPage;\r\n","import React from \"react\";\nimport CommentPage from \"./components/commentpage/CommentPage\";\n\nfunction App() {\n  return (\n   <>\n     <CommentPage />\n   </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/index.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}